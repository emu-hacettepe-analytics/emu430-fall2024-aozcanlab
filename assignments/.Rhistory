# Package
library(dslabs)
# Data set from the dslabs package
data("polls_us_election_2016")
# The first 10 rows of the data set
head(polls_us_election_2016, 10)
# Total number of NA values in the entire data set
total_of_numbers_NA <- sum(is.na(polls_us_election_2016))
total_of_numbers_NA
# My birth year and first name
# I got help from https://rnotlari.netlify.app/post/2020-10-17-hangi-apply-fonksiyonunu-kullan%C4%B1r%C4%B1z for "sapply()"
# Which are numeric?
numerc_columns <- sapply(polls_us_election_2016, FUN=is.numeric)
numerc_columns
# For numeric columns, replace NA values with my birth year
polls_us_election_2016[numerc_columns] <- lapply(polls_us_election_2016[numerc_columns], function(x) {
my_birthyear <- 2003
ifelse(is.na(x), my_birthyear, x)
}
)
View(polls_us_election_2016)
#  For character or factor columns, replace NA values with my first name.
polls_us_election_2016[!numerc_columns] <- lapply(polls_us_election_2016[!numerc_columns], function(y) {
my_name <- "Ahmet"
ifelse(is.na(y), my_name, y)
}
)
# Package
library(dslabs)
# Data set from the dslabs package
data("polls_us_election_2016")
# The first 10 rows of the data set
head(polls_us_election_2016, 10)
# Total number of NA values in the entire data set
total_of_numbers_NA <- sum(is.na(polls_us_election_2016))
total_of_numbers_NA
# I got help from https://rnotlari.netlify.app/post/2020-10-17-hangi-apply-fonksiyonunu-kullan%C4%B1r%C4%B1z for "sapply()"
# Which are numeric?
numerc_columns <- sapply(polls_us_election_2016, FUN=is.numeric)
numerc_columns
# For numeric columns, replace NA values with my birth year
polls_us_election_2016[numerc_columns] <- lapply(polls_us_election_2016[numerc_columns], function(x) {
my_birthyear <- 2003
ifelse(is.na(x), my_birthyear, x)
}
)
#  For character or factor columns, replace NA values with my first name.
polls_us_election_2016[!numerc_columns] <- sapply(polls_us_election_2016[!numerc_columns], function(y) {
my_name <- "Ahmet"
ifelse(is.na(y), my_name, y)
}
)
# Package
library(dslabs)
# Data set from the dslabs package
data("polls_us_election_2016")
# The first 10 rows of the data set
head(polls_us_election_2016, 10)
# Total number of NA values in the entire data set
total_of_numbers_NA <- sum(is.na(polls_us_election_2016))
total_of_numbers_NA
# I got help from https://rnotlari.netlify.app/post/2020-10-17-hangi-apply-fonksiyonunu-kullan%C4%B1r%C4%B1z for "sapply()"
# Which are numeric?
numerc_columns <- sapply(polls_us_election_2016, FUN=is.numeric)
numerc_columns
# For numeric columns, replace NA values with my birth year
polls_us_election_2016[numerc_columns] <- lapply(polls_us_election_2016[numerc_columns], function(x) {
my_birthyear <- 2003
ifelse(is.na(x), my_birthyear, x)
}
)
#  For character or factor columns, replace NA values with my first name.
polls_us_election_2016[!numerc_columns] <- apply(polls_us_election_2016[!numerc_columns], function(y) {
my_name <- "Ahmet"
ifelse(is.na(y), my_name, y)
}
)
#  For character or factor columns, replace NA values with my first name.
polls_us_election_2016[!numerc_columns] <- apply(polls_us_election_2016[!numerc_columns], FUN = function(y) {
my_name <- "Ahmet"
ifelse(is.na(y), my_name, y)
}
)
#  For character or factor columns, replace NA values with my first name.
polls_us_election_2016[!numerc_columns] <- sapply(polls_us_election_2016[!numerc_columns], function(y) {
my_name <- "Ahmet"
ifelse(is.na(y), my_name, y)
}
)
# the total number of NAsremaining in the new data frame.
total_numer_of_NAs_remaining <- sum(is.na(new_object))
# The modified data set is stored as a new object.
new_object <- polls_us_election_2016
# The first 10 rows of the new data frame and the total number of NAs remaining in the new data frame.
head(new_object, 10)
# the total number of NAsremaining in the new data frame.
total_numer_of_NAs_remaining <- sum(is.na(new_object))
total_numer_of_NAs_remaining
# The modified data set is stored as a new object.
new_object <- polls_us_election_2016
